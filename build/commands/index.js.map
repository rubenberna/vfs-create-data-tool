{"version":3,"sources":["../components/SelectPackageManager.js","../components/Loader.js","../components/StaticSteps.js","../components/SuccessMsg.js","../utils/connectToFeed.js","../consts/steps.consts.js","../utils/createLibrary.js","../utils/tryCatch.js","../hooks/useStartProject.js","index.js"],"names":["SelectPackageManager","selectManager","packageManager","items","label","value","Loader","loadingMsg","StaticSteps","steps","step","nr","success","title","SuccessMsg","name","completed","installVstsAuth","STEPS","NPMRC","MANAGER","MAKE_DIR","COPY","INSTALL_ROOT","INSTALL_WORKBENCH","getStepsDetails","boolean","templateBlacklist","Set","_createDir","info","parts","split","shortName","length","dest","path","join","process","cwd","source","__dirname","_getFiles","replace","dot","_copyTemplate","opts","file","fileRelativePath","relative","startsWith","destFilePath","destFileDir","parse","dir","isAFontFile","array","includes","has","content","fs","readFileSync","writeFileSync","template","handlebars","compile","yarn","_initPackagesRoot","_initPackagesWorkbench","workbench","createDir","getFiles","copyTemplate","initPackagesRoot","initPackagesWorkbench","tryCatchWrapper","asyncFunc","args","updateSteps","res","e","console","log","useStartProject","setLoadingMsg","setCompleted","exit","promptDetails","start","connectToFeed","files","createLibraryModule","finish","os","platform","undefined","promises","map","Promise","all","installDependencies","App","inputArgs","setPackageManager","setSteps","newStep","previousSteps","handleSelectManager","item","propTypes","PropTypes"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React from 'react';\nimport SelectInput from 'ink-select-input';\nimport { Box, Text } from 'ink';\n\nexport const SelectPackageManager = ({ selectManager, packageManager }) => {\n\n  const items = [\n    {\n      label: 'Yarn (recommended)',\n      value: 'yarn'\n    },\n    {\n      label: 'Npm',\n      value: 'npm'\n    }\n  ]\n\n  return (\n    <>\n      { !packageManager &&\n      <Box flexDirection=\"column\">\n        <Text>What's your favourite package manager?</Text>\n        <SelectInput items={items} onSelect={selectManager}/>\n      </Box>\n      }\n    </>\n  )\n}","import React from 'react';\nimport { Text } from 'ink';\nimport Spinner from 'ink-spinner';\n\nexport const Loader = ({ loadingMsg }) => {\n  return(\n    <>\n      { loadingMsg &&\n      <Text>\n        <Text color=\"green\">\n          <Spinner type=\"dots\"  />\n        </Text>\n        {` ${loadingMsg}`}\n      </Text>\n      }\n    </>\n  )\n}","import React from 'react';\nimport { Box, Text, Static } from 'ink';\n\nexport const StaticSteps = ({steps}) => {\n  return (\n    <Static items={steps}>\n      {step => (\n        <Box key={step.nr}>\n          { step.success ?\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t<Text color=\"#006064\">✔ </Text>\n\t\t\t\t\t\t\t<Text color=\"#fff\">{step.title}</Text>\n\t\t\t\t\t\t</Text>\n            :\n            <Text color=\"red\">&#x261E; {step.title}</Text>\n          }\n        </Box>\n      )}\n    </Static>\n  )\n}\n","import React from 'react';\nimport { Box, Text, Newline } from 'ink';\n\n\nexport const SuccessMsg = ({name, packageManager, completed}) => {\n  return (\n    <>\n      {\n        completed &&\n        <Box borderStyle=\"round\" borderColor=\"green\" width={40} padding={2}>\n          <Text>\n            <Text italic>To install your project:</Text>\n            <Newline/>\n            <Text>cd <Text color=\"green\" bold>{name}</Text></Text>\n            <Newline />\n            <Text color=\"green\" bold>{packageManager} install</Text>\n\t\t\t\t\t\t<Newline />\n\t\t\t\t\t\t<Newline />\n\t\t\t\t\t\t<Text>cd <Text color=\"green\" bold>example</Text></Text>\n\t\t\t\t\t\t<Newline />\n\t\t\t\t\t\t<Text color=\"green\" bold>{packageManager} install</Text>\n\t\t\t\t\t\t<Newline/>\n\t\t\t\t\t\t<Newline/>\n            <Text>To run your project:</Text>\n\t\t\t\t\t\t<Newline />\n\t\t\t\t\t\t<Text>From the project root -- <Text color=\"green\" bold>{packageManager} start</Text></Text>\n            <Newline />\n            <Newline />\n            <Text italic>To publish your project:</Text>\n            <Newline/>\n            <Text color=\"green\" bold>{packageManager} publish</Text>\n            <Newline />\n            <Newline />\n            <Text italic>\"If you build it, they will come!\"</Text>\n          </Text>\n        </Box>\n      }\n    </>\n  )\n}\n","import execa from 'execa';\n\nexport async function installVstsAuth() {\n  await execa('npm', ['install', '-g', 'vsts-npm-auth', '--registry', 'https://registry.npmjs.com', '--always-auth', 'false'])\n}","export const STEPS = {\n  NPMRC: 'NPMRC',\n  MANAGER: 'MANAGER',\n  MAKE_DIR: 'MAKE_DIR',\n  COPY: 'COPY',\n  INSTALL_ROOT: 'INSTALL_ROOT',\n  INSTALL_WORKBENCH: 'INSTALL_WORKBENCH',\n}\n\nexport const getStepsDetails = (name, boolean = true, title) => ({\n  [STEPS.NPMRC]: {\n    nr: 0,\n    title: title || 'Connected to feed via vsts-npm-auth',\n    success: boolean\n  },\n  [STEPS.MANAGER]:  {\n    nr: 1,\n    title: 'Selected package manager',\n    success: boolean\n  },\n  [STEPS.MAKE_DIR]: {\n    nr: 2,\n    title: title || 'Created directory',\n    success: boolean\n  },\n  [STEPS.COPY]:  {\n    nr: 3,\n    title: 'Copied template',\n    success: boolean\n  },\n  [STEPS.INSTALL_ROOT]:  {\n    nr: 4,\n    title: 'Installed dependencies in root',\n    success: boolean\n  },\n\t[STEPS.INSTALL_WORKBENCH]:  {\n    nr: 4,\n    title: 'Installed dependencies in workbench',\n    success: boolean\n  },\n})[name]\n","import handlebars from 'handlebars';\nimport fs from 'fs';\nimport globby from 'globby';\nimport makeDir from 'make-dir';\nimport path from 'path';\nimport execa from 'execa';\n\n\nconst templateBlacklist = new Set([\n\t'example/public/favicon.ico',\n\t'example/public/.gitignore',\n\t'.git'\n])\n\nexport default (() => {\n\n\tconst _createDir = async (info) => {\n\t\tconst { name } = info;\n\t\tconst parts = name.split('/')\n\t\tinfo.shortName = parts[parts.length - 1]\n\n\t\tconst dest = path.join(process.cwd(), info.shortName)\n\t\tinfo.dest = dest\n\t\tawait makeDir(dest)\n\t\tconst source = path.join(__dirname, '..', '..', 'template', 'data-tool')\n\n\t\treturn {\n\t\t\tsource,\n\t\t\tdest,\n\t\t\tinfo\n\t\t}\n\t}\n\n\tconst _getFiles = async (source) => {\n\t\treturn await globby(source.replace(/\\\\/g, '/'), {\n\t\t\tdot: true\n\t\t})\n\t}\n\n\tconst _copyTemplate = async (opts) => {\n\t\tconst { file, source, dest, info } = opts\n\t\tconst fileRelativePath = path.relative(source, file).replace(/\\\\/g, '/')\n\t\tif (fileRelativePath.startsWith('.git')) {\n\t\t\treturn\n\t\t}\n\n\t\tconst destFilePath = path.join(dest, fileRelativePath)\n\t\tconst destFileDir = path.parse(destFilePath).dir\n\n\t\tawait makeDir(destFileDir)\n\n\t\tconst isAFontFile = (fileRelativePath) => {\n\t\t\tconst array = fileRelativePath.split('/')\n\t\t\treturn array.includes('fonts')\n\t\t}\n\n\t\tif (templateBlacklist.has(fileRelativePath) || isAFontFile(fileRelativePath)) {\n\t\t\tconst content = fs.readFileSync(file)\n\t\t\tfs.writeFileSync(destFilePath, content)\n\t\t} else {\n\t\t\tconst template = handlebars.compile(fs.readFileSync(file, 'utf8')) // error\n\t\t\tconst content = template({\n\t\t\t\t...info,\n\t\t\t\tyarn: info.packageManager === 'yarn'\n\t\t\t})\n\n\t\t\tfs.writeFileSync(destFilePath, content, 'utf8')\n\t\t}\n\n\t\treturn fileRelativePath\n\t}\n\n\tconst _initPackagesRoot = ({dest, info}) => {\n\t\treturn execa(info.packageManager, ['install'], { cwd: dest})\n\t}\n\n\tconst _initPackagesWorkbench = ({dest, info}) => {\n\t\tconst workbench = path.join(dest, 'example')\n\t\treturn execa(info.packageManager, ['install'], { cwd: workbench })\n\t}\n\n\treturn {\n\t\tcreateDir: _createDir,\n\t\tgetFiles: _getFiles,\n\t\tcopyTemplate: _copyTemplate,\n\t\tinitPackagesRoot: _initPackagesRoot,\n\t\tinitPackagesWorkbench: _initPackagesWorkbench\n\t}\n})()\n\n","import { getStepsDetails } from '../consts/steps.consts';\n\nexport const tryCatchWrapper = async (asyncFunc, args, updateSteps, step) => {\n\ttry {\n\t\tconst res = await asyncFunc(args)\n\t\tupdateSteps && updateSteps(getStepsDetails(step))\n\t\treturn res\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tupdateSteps(getStepsDetails(step, false))\n\t}\n}\n\n\n","import { installVstsAuth } from '../utils/connectToFeed';\nimport { STEPS, getStepsDetails } from '../consts/steps.consts';\nimport createLibraryModule from '../utils/createLibrary.js';\nimport { tryCatchWrapper } from '../utils/tryCatch';\n\nexport const useStartProject = (name, packageManager, setLoadingMsg, updateSteps, setCompleted, exit) => {\n\n\tconst promptDetails = { name, packageManager }\n\n\tconst start = async () => {\n\t\tawait connectToFeed()\n\t\tconst { source, dest, info } = await createDir(promptDetails)\n\t\tconst files = await createLibraryModule.getFiles(source)\n\t\tawait copyTemplate({files, source, dest, info})\n\t\t// await installDependencies(dest, info)\n\t\tfinish()\n\t}\n\n\tconst connectToFeed = async () => {\n\t\tsetLoadingMsg('Setting connection to feed')\n\t\tconst os = process.platform\n\t\tif (os === 'win32') {\n\t\t\tawait tryCatchWrapper(installVstsAuth, undefined, updateSteps, STEPS.NPMRC)\n\t\t\tsetLoadingMsg(undefined)\n\t\t} else {\n\t\t\tupdateSteps(getStepsDetails(STEPS.NPMRC, false, 'You are not a Windows user. Please check how to connect to the Azure feed here: https://docs.microsoft.com/en-us/azure/devops/artifacts/npm/npmrc?view=azure-devops#set-up-authentication-on-your-dev-box'))\n\t\t\tsetLoadingMsg(undefined)\n\t\t}\n\t}\n\n\tconst createDir = async () => {\n\t\tsetLoadingMsg('Creating directory')\n\t\treturn await tryCatchWrapper(createLibraryModule.createDir, promptDetails, updateSteps, STEPS.MAKE_DIR)\n\t}\n\n\tconst copyTemplate = async ({files, source, dest, info}) => {\n\t\tsetLoadingMsg('Copying template')\n\t\tconst promises = files.map(async (file) => await tryCatchWrapper(createLibraryModule.copyTemplate, {\n\t\t\tfile,\n\t\t\tsource,\n\t\t\tdest,\n\t\t\tinfo\n\t\t}))\n\t\tawait Promise.all(promises)\n\t\treturn updateSteps(getStepsDetails(STEPS.COPY))\n\t}\n\n\tconst installDependencies = async (dest, info) => {\n\t\tsetLoadingMsg('Installing dependencies in root')\n\t\tawait createLibraryModule.initPackagesRoot({ dest, info })\n\t\tupdateSteps(getStepsDetails(STEPS.INSTALL_ROOT))\n\t\tsetLoadingMsg('Installing dependencies in workbench')\n\t\tawait createLibraryModule.initPackagesWorkbench({ dest, info })\n\t\treturn updateSteps(getStepsDetails(STEPS.INSTALL_WORKBENCH))\n\t}\n\n\tconst finish = () => {\n\t\tsetLoadingMsg(undefined)\n\t\tsetCompleted(true)\n\t\texit()\n\t}\n\n\treturn {\n\t\tstart\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useApp } from 'ink';\nimport { SelectPackageManager } from '../components/SelectPackageManager';\nimport { Loader } from '../components/Loader';\nimport { StaticSteps } from '../components/StaticSteps';\nimport { SuccessMsg } from '../components/SuccessMsg';\nimport { useStartProject } from '../hooks/useStartProject';\nimport { getStepsDetails, STEPS } from '../consts/steps.consts';\n\n/// Name your project command\nconst App = ({inputArgs}) => {\n\tconst {exit} = useApp();\n\tconst [packageManager, setPackageManager] = useState(undefined);\n\tconst [loadingMsg, setLoadingMsg] = useState(undefined);\n\tconst [steps, setSteps] = useState([]);\n\tconst [completed, setCompleted] = useState(false);\n\tconst name = inputArgs[0]\n\n\tconst updateSteps = (newStep) => {\n\t\tsetSteps(previousSteps => [\n\t\t\t...previousSteps,\n\t\t\tnewStep\n\t\t])\n\t};\n\n\tconst handleSelectManager = (item) => {\n\t\tsetPackageManager(item.value)\n\t\tupdateSteps(getStepsDetails(STEPS.MANAGER))\n\t}\n\n\tconst { start } = useStartProject(name, packageManager, setLoadingMsg, updateSteps, setCompleted, exit);\n\n\tuseEffect(() => {\n\t\tif (packageManager) {\n\t\t\tstart()\n\t\t}\n\t}, [packageManager])\n\n\n\treturn (\n\t\t<>\n\t\t\t<StaticSteps steps={steps}/>\n\t\t\t<Loader loadingMsg={loadingMsg}/>\n\t\t\t<SelectPackageManager selectManager={handleSelectManager} packageManager={packageManager}/>\n\t\t\t<SuccessMsg name={name} packageManager={packageManager} completed={completed}/>\n\t\t</>\n\t);\n}\n\nApp.propTypes = {\n\t/// Name of your project\n\tinputArgs: PropTypes.array\n};\n\nexport default App;\n"]}